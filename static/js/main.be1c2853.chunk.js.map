{"version":3,"sources":["components/Header.js","components/Card.js","components/Gameboard.js","App.js","index.js"],"names":["Header","backgroundAudio","document","getElementById","volume","window","onload","play","className","Card","props","useState","selected","setSelected","wonAudio","querySelector","lostAudio","setWin","win","setLost","lose","reset","setTimeout","setReset","onClick","paused","currentTime","draggable","src","image","alt","name","Gameboard","streak","setStreak","highScore","setHighScore","handleWin","audio","handleLost","resetCard","cardArray","array","i","length","j","Math","floor","random","temp","slice","shuffleArray","id","App","ReactDOM","render","StrictMode"],"mappings":"wLAmBeA,EAjBA,WACX,IAAMC,EAAkBC,SAASC,eAAe,oBAOhD,OANAF,EAAgBG,OAAS,GAEzBC,OAAOC,OAAO,WACVL,EAAgBM,QAIhB,qBAAKC,UAAU,iBAAf,SACI,qBAAKA,UAAU,SAAf,sC,OCmDGC,EA7DF,SAACC,GACV,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAWZ,SAASa,cAAc,aACxCD,EAASV,OAAS,IAClB,IAAMY,EAAYd,SAASa,cAAc,eACzCC,EAAUZ,OAAS,IACnB,IAAMH,EAAkBC,SAASC,eAAe,oBAChDF,EAAgBG,OAAS,GAEzB,IAqBMa,EAAS,WACXJ,GAAY,GACZH,EAAMQ,OAGJC,EAAU,WACZT,EAAMU,QAWV,OARoB,IAAhBV,EAAMW,OACNC,YAAW,WACPZ,EAAMa,UAAS,GACfV,GAAY,KACb,GAKH,sBAAKL,UAAU,OAAOgB,QAvCN,WAChBvB,EAAgBM,QACC,IAAbK,GACIE,EAASW,SAGTX,EAASY,YAAc,GAFvBZ,EAASP,OAKbe,WAAWL,IAAU,OAEjBD,EAAUS,SAGVT,EAAUU,YAAc,GAFxBV,EAAUT,OAKde,WAAWH,IAAW,OAsB1B,UACI,qBAAKX,UAAU,aAAf,SACI,qBAAKmB,UAAU,QAAQC,IAAKlB,EAAMmB,MAAOC,IAAI,QAEjD,qBAAKtB,UAAU,YAAf,SACKE,EAAMqB,WC6DRC,EAlHG,WACd,MAA4BrB,mBAAS,GAArC,mBAAOsB,EAAP,KAAeC,EAAf,KACA,EAAkCvB,mBAAS,GAA3C,mBAAOwB,EAAP,KAAkBC,EAAlB,KACA,EAA0BzB,oBAAS,GAAnC,mBAAOU,EAAP,KAAcE,EAAd,KAMMc,EAAY,WAEd,GAN0BH,EAAUD,EAAS,GAMzCA,IAAWE,EAAW,CAJGC,EAAaH,EAAS,GAM/C,IAAMK,EAAQpC,SAASa,cAAc,kBACrCuB,EAAMlC,OAAS,IACXkC,EAAMb,SAGNa,EAAMZ,YAAc,GAFpBY,EAAM/B,SAQZgC,EAAa,WAlBOL,EAAU,GAoBhCM,KAGAC,EAAY,CACZ,cAAC,EAAD,CAAMV,KAAK,cAA2BF,MAAM,sBAAsBX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA/F,SAC7B,cAAC,EAAD,CAAMQ,KAAK,cAA0BF,MAAM,2BAA2BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAnG,SAC7B,cAAC,EAAD,CAAMQ,KAAK,WAA0BF,MAAM,sCAAsCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAjH,YAC1B,cAAC,EAAD,CAAMQ,KAAK,SAAsBF,MAAM,gCAAgCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAzG,UACxB,cAAC,EAAD,CAAMQ,KAAK,SAAqBF,MAAM,4BAA4BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAArG,UACvB,cAAC,EAAD,CAAMQ,KAAK,UAAwBF,MAAM,6BAA6BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAvG,WACzB,cAAC,EAAD,CAAMQ,KAAK,QAAoBF,MAAM,oCAAoCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA5G,SACvB,cAAC,EAAD,CAAMQ,KAAK,YAA4BF,MAAM,+BAA+BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA3G,aAC3B,cAAC,EAAD,CAAMQ,KAAK,QAAoBF,MAAM,kCAAkCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA1G,SACvB,cAAC,EAAD,CAAMQ,KAAK,SAAsBF,MAAM,wBAAwBX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAjG,UACxB,cAAC,EAAD,CAAMQ,KAAK,OAAkBF,MAAM,sBAAsBX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA7F,QACtB,cAAC,EAAD,CAAMQ,KAAK,UAAwBF,MAAM,oCAAoCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA9G,WACzB,cAAC,EAAD,CAAMQ,KAAK,aAA8BF,MAAM,gCAAgCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA7G,cAC5B,cAAC,EAAD,CAAMQ,KAAK,cAAgCF,MAAM,iCAAiCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA/G,eAC7B,cAAC,EAAD,CAAMQ,KAAK,cAAgCF,MAAM,iCAAiCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA/G,eAC7B,cAAC,EAAD,CAAMQ,KAAK,WAA0BF,MAAM,8BAA8BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAzG,YAC1B,cAAC,EAAD,CAAMQ,KAAK,SAAsBF,MAAM,4BAA4BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAArG,UACxB,cAAC,EAAD,CAAMQ,KAAK,WAA0BF,MAAM,mCAAmCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA9G,YAC1B,cAAC,EAAD,CAAMQ,KAAK,WAA0BF,MAAM,8BAA8BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAzG,YAC1B,cAAC,EAAD,CAAMQ,KAAK,eAAsCF,MAAM,sCAAsCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAzH,oBAC9B,cAAC,EAAD,CAAMQ,KAAK,WAA0BF,MAAM,8BAA8BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAzG,YAC1B,cAAC,EAAD,CAAMQ,KAAK,aAA8BF,MAAM,gCAAgCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA7G,cAC5B,cAAC,EAAD,CAAMQ,KAAK,aAA8BF,MAAM,gCAAgCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA7G,cAC5B,cAAC,EAAD,CAAMQ,KAAK,eAAkCF,MAAM,kCAAkCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAjH,gBAC9B,cAAC,EAAD,CAAMQ,KAAK,YAA4BF,MAAM,+BAA+BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA3G,aAC3B,cAAC,EAAD,CAAMQ,KAAK,cAAgCF,MAAM,iCAAiCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA/G,eAC7B,cAAC,EAAD,CAAMQ,KAAK,SAAsBF,MAAM,4BAA4BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAArG,UACxB,cAAC,EAAD,CAAMQ,KAAK,aAA8BF,MAAM,gCAAgCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA7G,cAC5B,cAAC,EAAD,CAAMQ,KAAK,YAA4BF,MAAM,yBAAyBX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAArG,aAC3B,cAAC,EAAD,CAAMQ,KAAK,WAAqBF,MAAM,kCAAkCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAxG,OAC1B,cAAC,EAAD,CAAMQ,KAAK,OAAkBF,MAAM,sBAAsBX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA7F,QACtB,cAAC,EAAD,CAAMQ,KAAK,cAA0BF,MAAM,4BAA4BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAApG,SAC7B,cAAC,EAAD,CAAMQ,KAAK,YAA4BF,MAAM,uBAAuBX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAnG,aAC3B,cAAC,EAAD,CAAMQ,KAAK,cAA0BF,MAAM,2BAA2BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAnG,SAC7B,cAAC,EAAD,CAAMQ,KAAK,SAAsBF,MAAM,4BAA4BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAArG,UACxB,cAAC,EAAD,CAAMQ,KAAK,QAAmBF,MAAM,0BAA0BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAjG,QACvB,cAAC,EAAD,CAAMQ,KAAK,gBAA+BF,MAAM,uCAAuCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAAlH,YAC/B,cAAC,EAAD,CAAMQ,KAAK,cAAyBF,MAAM,uCAAuCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA9G,QAC7B,cAAC,EAAD,CAAMQ,KAAK,eAAgCF,MAAM,kCAAkCX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAA/G,cAC9B,cAAC,EAAD,CAAMQ,KAAK,aAAyBF,MAAM,4CAA4CX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAApH,SAC5B,cAAC,EAAD,CAAMQ,KAAK,SAAsBF,MAAM,4BAA4BX,IAAKmB,EAAWjB,KAAMmB,EAAYlB,MAAOA,EAAOE,SAAUA,GAArG,YAKP,SAAAmB,GACjB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAGNP,EAAMQ,MAAM,EAAG,IAE1BC,CAAaV,GAEb,IAAMD,EAAY,WACdjB,GAAUF,IAGd,OACI,gCACI,qBAAK+B,GAAG,gBAAR,SACI,sBAAKA,GAAG,kBAAR,UACI,sBAAK5C,UAAU,eAAf,UACI,sFACA,mFAEJ,sBAAKA,UAAU,QAAf,UACI,sBAAK4C,GAAG,SAAR,qBAA0BnB,KAC1B,sBAAKmB,GAAG,YAAR,yBAAiCjB,aAI7C,qBAAKiB,GAAG,oBAAR,SACI,qBAAK5C,UAAU,YAAf,SACKiC,UCjGNY,MATf,WACE,OACE,sBAAK7C,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCFR8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtD,SAASC,eAAe,W","file":"static/js/main.be1c2853.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    const backgroundAudio = document.getElementById(\"background-audio\");\n    backgroundAudio.volume = 0.3;\n\n    window.onload=function(){\n        backgroundAudio.play();\n      }\n    \n    return (\n        <div className=\"header-wrapper\">\n            <div className='header'>\n                Minecraft Memory Game\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\n\nconst Card = (props) => {\n    const [selected, setSelected] = useState(false);\n\n    const wonAudio = document.querySelector('#xp-sound');\n    wonAudio.volume = 0.18;\n    const lostAudio = document.querySelector('#lose-sound');\n    lostAudio.volume = 0.15;\n    const backgroundAudio = document.getElementById(\"background-audio\");\n    backgroundAudio.volume = 0.3;\n\n    const handleClick = () => {\n        backgroundAudio.play();\n        if (selected === false) {\n            if (wonAudio.paused) {\n                wonAudio.play();\n            }else {\n                wonAudio.currentTime = 0\n                wonAudio.play();\n            }\n            setTimeout(setWin(), 200);\n        } else {\n            if (lostAudio.paused) {\n                lostAudio.play();\n            } else {\n                lostAudio.currentTime = 0\n                lostAudio.play();\n            }\n            setTimeout(setLost(), 200);\n        }\n    }\n\n    const setWin = () => {\n        setSelected(true);\n        props.win();\n    }\n\n    const setLost = () => {\n        props.lose();\n    }\n\n    if (props.reset === true) {\n        setTimeout(() => {\n            props.setReset(false);\n            setSelected(false);\n        }, 1\n        );\n    }\n\n    return (\n        <div className='card' onClick={handleClick}>\n            <div className=\"card-image\">\n                <img draggable=\"false\" src={props.image} alt=\"#\" />\n            </div>\n            <div className=\"card-name\">\n                {props.name} \n            </div>\n            {/* {`${selected}`} */}\n        </div>\n    );\n}\n\nexport default Card;\n","import React, {useState} from 'react';\nimport Card from './Card.js'\n\nconst Gameboard = () => {\n    const [streak, setStreak] = useState(0);\n    const [highScore, setHighScore] = useState(0);\n    const [reset, setReset] = useState(false)\n\n    const incrementStreak = () => setStreak(streak + 1)\n    const resetStreak = () => setStreak(0)\n    const incrementHighScore = () => setHighScore(streak + 1)\n\n    const handleWin = () => {\n        incrementStreak();\n        if (streak === highScore) {\n            incrementHighScore();\n            const audio = document.querySelector('#levelup-sound');\n            audio.volume = 0.18;\n            if (audio.paused) {\n                audio.play();\n            }else {\n                audio.currentTime = 0\n                audio.play();\n            }      \n        }\n    }\n\n    const handleLost = () => {\n        resetStreak();\n        resetCard();\n    }\n  \n    let cardArray = [\n        <Card name='Grass Block' key='Grass'  image='./img/GrassNew.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Stone Block' key='Stone' image='./img/Stone_JE4_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Amethyst' key='Amethyst' image='./img/Amethyst_Cluster_(U)_JE1.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Barrel' key='Barrel' image='./img/Barrel_(U)_JE1_BE1.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Beacon'key='Beacon' image='./img/Beacon_JE6_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Bedrock' key='Bedrock' image='./img/Bedrock_JE2_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Birch' key='Birch' image='./img/Birch_Log_(UD)_JE5_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Bookshelf' key='Bookshelf' image='./img/Bookshelf_JE4_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Anvil' key='Anvil' image='./img/Broken_Anvil_(N)_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Cactus' key='Cactus' image='./img/Cactus_JE4.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Cake' key='Cake' image='./img/Cake_JE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Pumpkin' key='Pumpkin' image='./img/Carved_Pumpkin_(S)_JE4.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Copper Ore' key='Copper Ore' image='./img/Copper_Ore_JE2_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Diamond Ore' key='Diamond Ore' image='./img/Diamond_Ore_JE5_BE5.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Emerald Ore' key='Emerald Ore' image='./img/Emerald_Ore_JE4_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Gold Ore' key='Gold Ore' image='./img/Gold_Ore_JE7_BE4.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Gravel' key='Gravel' image='./img/Gravel_JE5_BE4.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Hay Bale' key='Hay Bale' image='./img/Hay_Bale_(UD)_JE2_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Iron Ore' key='Iron Ore' image='./img/Iron_Ore_JE6_BE4.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Lapis Lazuli' key='Lapis Lazuli Ore' image='./img/Lapis_Lazuli_Ore_JE4_BE4.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Mycelium' key='Mycelium' image='./img/Mycelium_JE2_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Packed Ice' key='Packed Ice' image='./img/Packed_Ice_JE2_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Prismarine' key='Prismarine' image='./img/Prismarine_JE2_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Redstone Ore' key='Redstone Ore' image='./img/Redstone_Ore_JE4_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Sandstone' key='Sandstone' image='./img/Sandstone_JE6_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Slime Block' key='Slime Block' image='./img/Slime_Block_JE2_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Sponge' key='Sponge' image='./img/Sponge_JE3_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Sugar Cane' key='Sugar Cane' image='./img/Sugar_Cane_JE2_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='TNT Block' key='TNT Block' image='./img/TNT_JE3_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Bee Nest' key='Bee' image='./img/Bee_Nest_(N)_JE1_BE1.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Bell' key='Bell' image='./img/Bell_JE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Brick Block' key='Brick' image='./img/Bricks_JE5_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Composter' key='Composter' image='./img/Composter.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Glass Block' key='Glass' image='./img/Glass_JE4_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Hopper' key='Hopper' image='./img/Hopper_(S)_JE4.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Grass' key='Fern' image='./img/Jungle_Grass.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Redstone Lamp' key='Red Lamp' image='./img/Lit_Redstone_Lamp_JE3_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Nether Wart' key='Wart' image='./img/Nether_Wart_Age_2_JE2_BE3.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Red Mushroom' key='Red Shroom' image='./img/Red_Mushroom_JE2_BE2.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Berry Bush' key='Berry' image='./img/Sweet_Berry_Bush_Age_2_JE1_BE1.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n        <Card name='Leaves' key='Leaves' image='./img/Oak_Leaves_BE5.webp' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n\n        // <Card name='' key='' image='.' win={handleWin} lose={handleLost} reset={reset} setReset={setReset}/>,\n    ];\n\n    const shuffleArray = array => {\n        for (let i = array.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          const temp = array[i];\n          array[i] = array[j];\n          array[j] = temp;\n        }\n        //Returns the 'n' amount of items from the array to display.\n        return array.slice(0, 14)\n    }  \n    shuffleArray(cardArray)\n\n    const resetCard = () => {\n        setReset(!reset)\n    }\n\n    return (\n        <div>\n            <div id=\"score-wrapper\">\n                <div id=\"score-container\">\n                    <div className=\"instructions\">\n                        <div>How to score: Choose any card to build your streak!</div>\n                        <div>Selecting an old card will break the streak. </div>\n                    </div>\n                    <div className=\"score\">\n                        <div id=\"streak\">Streak: {streak}</div>\n                        <div id=\"highscore\">Best score: {highScore}</div>\n                    </div>\n                </div>\n            </div>\n            <div id=\"gameboard-wrapper\">\n                <div className=\"gameboard\">\n                    {cardArray}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Gameboard;\n","import React from \"react\";\nimport Header from \"./components/Header.js\";\nimport Gameboard from \"./components/Gameboard.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <Gameboard />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/style.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}